import gmpy2
from Crypto.Util.number import *

def decrypt(p, q, e, c):
    n = p * q
    phi_n = (p - 1) * (q - 1)
    t = gmpy2.gcd(e, phi_n)
    d = gmpy2.invert(e // t, phi_n)
    m = pow(c, d, n)
    print(m)
    msg = gmpy2.iroot(m, t)
    print(msg)
    if msg[1]:
        print(long_to_bytes(msg[0]))

p= 86053582917386343422567174764040471033234388106968488834872953625339458483149
q= 72031998384560188060716696553519973198388628004850270102102972862328770104493
e= 74
c= 3939634105073614197573473825268995321781553470182462454724181094897309933627076266632153551522332244941496491385911139566998817961371516587764621395810123

decrypt(p, q, e, c)